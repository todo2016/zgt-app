{"version":3,"file":"user.js","sources":["stores/user.js"],"sourcesContent":["// 用户状态管理\r\nimport { defineStore } from 'pinia'\r\nimport { ref, computed } from 'vue'\r\nimport { setToken, removeToken, setUserInfo, removeUserInfo, getToken } from '../utils/auth'\r\nimport * as userApi from '../api/user'\r\n\r\nexport const useUserStore = defineStore('user', () => {\r\n  // 状态\r\n  const token = ref(getToken() || '')\r\n  const userInfo = ref(null)\r\n  const isLogin = ref(!!getToken())\r\n\r\n  // 计算属性\r\n  const hasUserInfo = computed(() => !!userInfo.value)\r\n  const userId = computed(() => userInfo.value?.id || '')\r\n\r\n  // 登录\r\n  const login = async (loginData) => {\r\n    try {\r\n      const data = await userApi.login(loginData)\r\n      \r\n      // 保存token和用户信息\r\n      token.value = data.token\r\n      userInfo.value = data.userInfo\r\n      isLogin.value = true\r\n      \r\n      // 存储到本地\r\n      setToken(data.token)\r\n      setUserInfo(data.userInfo)\r\n      \r\n      return data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  // 获取用户信息\r\n  const fetchUserInfo = async () => {\r\n    try {\r\n      const data = await userApi.getUserInfo()\r\n      userInfo.value = data\r\n      setUserInfo(data)\r\n      return data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  // 更新用户信息\r\n  const updateUserInfo = async (updateData) => {\r\n    try {\r\n      const data = await userApi.updateUserInfo(updateData)\r\n      userInfo.value = { ...userInfo.value, ...data }\r\n      setUserInfo(userInfo.value)\r\n      return data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  // 登出\r\n  const logout = async () => {\r\n    try {\r\n      if (token.value) {\r\n        await userApi.logout()\r\n      }\r\n    } catch (error) {\r\n      console.error('登出失败:', error)\r\n    } finally {\r\n      // 清除状态\r\n      token.value = ''\r\n      userInfo.value = null\r\n      isLogin.value = false\r\n      \r\n      // 清除本地存储\r\n      removeToken()\r\n      removeUserInfo()\r\n    }\r\n  }\r\n\r\n  // 检查登录状态\r\n  const checkLoginStatus = () => {\r\n    const localToken = getToken()\r\n    if (localToken && !token.value) {\r\n      token.value = localToken\r\n      isLogin.value = true\r\n      return true\r\n    }\r\n    return isLogin.value\r\n  }\r\n\r\n  return {\r\n    // 状态\r\n    token,\r\n    userInfo,\r\n    isLogin,\r\n    \r\n    // 计算属性\r\n    hasUserInfo,\r\n    userId,\r\n    \r\n    // 方法\r\n    login,\r\n    fetchUserInfo,\r\n    updateUserInfo,\r\n    logout,\r\n    checkLoginStatus\r\n  }\r\n})\r\n"],"names":["defineStore","ref","getToken","computed","userApi.login","setToken","setUserInfo","userApi.getUserInfo","userApi.updateUserInfo","userApi.logout","uni","removeToken","removeUserInfo"],"mappings":";;;;AAMY,MAAC,eAAeA,cAAAA,YAAY,QAAQ,MAAM;AAEpD,QAAM,QAAQC,cAAAA,IAAIC,WAAQ,SAAA,KAAM,EAAE;AAClC,QAAM,WAAWD,cAAG,IAAC,IAAI;AACzB,QAAM,UAAUA,cAAAA,IAAI,CAAC,CAACC,WAAQ,SAAA,CAAE;AAGhC,QAAM,cAAcC,cAAQ,SAAC,MAAM,CAAC,CAAC,SAAS,KAAK;AACnD,QAAM,SAASA,cAAAA,SAAS,MAAA;;AAAM,2BAAS,UAAT,mBAAgB,OAAM;AAAA,GAAE;AAGtD,QAAM,QAAQ,OAAO,cAAc;AACjC,QAAI;AACF,YAAM,OAAO,MAAMC,SAAa,MAAC,SAAS;AAG1C,YAAM,QAAQ,KAAK;AACnB,eAAS,QAAQ,KAAK;AACtB,cAAQ,QAAQ;AAGhBC,iBAAQ,SAAC,KAAK,KAAK;AACnBC,iBAAW,YAAC,KAAK,QAAQ;AAEzB,aAAO;AAAA,IACR,SAAQ,OAAO;AACd,YAAM;AAAA,IACP;AAAA,EACF;AAGD,QAAM,gBAAgB,YAAY;AAChC,QAAI;AACF,YAAM,OAAO,MAAMC,qBAAqB;AACxC,eAAS,QAAQ;AACjBD,iBAAAA,YAAY,IAAI;AAChB,aAAO;AAAA,IACR,SAAQ,OAAO;AACd,YAAM;AAAA,IACP;AAAA,EACF;AAGD,QAAM,iBAAiB,OAAO,eAAe;AAC3C,QAAI;AACF,YAAM,OAAO,MAAME,SAAsB,eAAC,UAAU;AACpD,eAAS,QAAQ,EAAE,GAAG,SAAS,OAAO,GAAG,KAAM;AAC/CF,iBAAW,YAAC,SAAS,KAAK;AAC1B,aAAO;AAAA,IACR,SAAQ,OAAO;AACd,YAAM;AAAA,IACP;AAAA,EACF;AAGD,QAAM,SAAS,YAAY;AACzB,QAAI;AACF,UAAI,MAAM,OAAO;AACf,cAAMG,gBAAgB;AAAA,MACvB;AAAA,IACF,SAAQ,OAAO;AACdC,oBAAAA,MAAc,MAAA,SAAA,wBAAA,SAAS,KAAK;AAAA,IAClC,UAAc;AAER,YAAM,QAAQ;AACd,eAAS,QAAQ;AACjB,cAAQ,QAAQ;AAGhBC,6BAAa;AACbC,gCAAgB;AAAA,IACjB;AAAA,EACF;AAGD,QAAM,mBAAmB,MAAM;AAC7B,UAAM,aAAaV,WAAAA,SAAU;AAC7B,QAAI,cAAc,CAAC,MAAM,OAAO;AAC9B,YAAM,QAAQ;AACd,cAAQ,QAAQ;AAChB,aAAO;AAAA,IACR;AACD,WAAO,QAAQ;AAAA,EAChB;AAED,SAAO;AAAA;AAAA,IAEL;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACH,CAAC;;"}